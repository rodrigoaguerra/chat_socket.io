import * as React from 'react';
import List from '@mui/material/List';
import Typography from '@mui/material/Typography';
import Paper from '@mui/material/Paper';
import Avatar from '@mui/material/Avatar';
import ListItem from '@mui/material/ListItem';
import ListItemAvatar from '@mui/material/ListItemAvatar';
import ListItemText from '@mui/material/ListItemText';
import ListSubheader from '@mui/material/ListSubheader';
import Divider from '@mui/material/Divider';

const messages = [
    {
      id: 1,
      primary: 'Brunch this week?',
      secondary: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
      person: '/static/images/avatar/5.jpg',
    },
    {
      id: 2,
      primary: 'Birthday Gift',
      secondary: `Do you have a suggestion for a good present for John on his work
        anniversary. I am really confused & would love your thoughts on it.`,
      person: '/static/images/avatar/1.jpg',
    },
    {
      id: 3,
      primary: 'Recipe to try',
      secondary: 'I am try out this new BBQ recipe, I think this might be amazing',
      person: '/static/images/avatar/2.jpg',
    },
    {
      id: 4,
      primary: 'Yes!',
      secondary: 'I have the tickets to the ReactConf for this year.',
      person: '/static/images/avatar/3.jpg',
    },
    {
      id: 5,
      primary: "Doctor's Appointment",
      secondary: 'My appointment for the doctor was rescheduled for next Saturday.',
      person: '/static/images/avatar/4.jpg',
    },
    {
      id: 6,
      primary: 'Discussion',
      secondary: `Menus that are generated by the bottom app bar (such as a bottom
        navigation drawer or overflow menu) open as bottom sheets at a higher elevation
        than the bar.`,
      person: '/static/images/avatar/5.jpg',
    },
    {
      id: 7,
      primary: 'Summer BBQ',
      secondary: `Who wants to have a cookout this weekend? I just got some furniture
        for my backyard and would love to fire up the grill.`,
      person: '/static/images/avatar/1.jpg',
    },
  ];
  
interface User {
    id: number;
    name: string;
    status: string;
    avatar: string;
}
  
interface Message {
    msg: string;
    user: User;
}

export default function Messages(props) {
  const { socket } = props;
  
  const [listItems, setListItems] = React.useState<Message[]>([]);
  
  // recievied messages
  socket.on('chat message', (data: Message) => {
    if(!listItems.includes(data)){
      setListItems([...listItems, data]);
    }
  }); 

  return (
    <Paper square sx={{ pb: '10px', pt: '65px', height: `calc(100% - 65px)`, overflow:'auto',}}>
        <Typography variant="h5" gutterBottom component="div" sx={{ p: 2, pb: 0 }}>
        Inbox
        </Typography>
        <List sx={{ mb: 2 }}>
        {messages.map(({ id, primary, secondary, person }) => (
            <React.Fragment key={id}>
            {id === 1 && (
                <ListSubheader sx={{ bgcolor: 'background.paper' }}>
                Today
                </ListSubheader>
            )}
            {id === 3 && (
                <ListSubheader sx={{ bgcolor: 'background.paper' }}>
                Yesterday
                </ListSubheader>
            )}
            <ListItem>
                <ListItemAvatar>
                <Avatar alt="Profile Picture" src={person} />
                </ListItemAvatar>
                <ListItemText primary={primary} secondary={secondary} />
            </ListItem>
            </React.Fragment>
        ))}
        {listItems.map((item, index) => (
        <>
          <ListItem key={index}>
            <ListItemAvatar>
              <Avatar alt="Profile Picture" src={item.user.avatar} />
            </ListItemAvatar>
            <ListItemText primary={item.user.name} secondary={item.msg} />
          </ListItem>
          <Divider component="li" />
        </>
       ))}
        </List>
    </Paper>
  );
}