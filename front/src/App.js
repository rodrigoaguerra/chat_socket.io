// import logo from './logo.svg';
import io from 'socket.io-client';
import './App.css';
// import Input from  './Components/Input.tsx';
// import Message from './Components/Message.tsx';
import Dashboard from './Dashboard';

const users = [
  {
    id: 1,
    name: 'Brunch this week?',
    status: "I'll be in the neighbourhood this week. Let's grab a bite to eat",
    avatar: '/static/images/avatar/5.jpg',
  },
  {
    id: 2,
    name: 'Birthday Gift',
    status: `Do you have a suggestion for a good present for John on his work
      anniversary. I am really confused & would love your thoughts on it.`,
    avatar: '/static/images/avatar/1.jpg',
  },
  {
    id: 3,
    name: 'Recipe to try',
    status: 'I am try out this new BBQ recipe, I think this might be amazing',
    avatar: '/static/images/avatar/2.jpg',
  },
  {
    id: 4,
    name: 'Yes!',
    status: 'I have the tickets to the ReactConf for this year.',
    avatar: '/static/images/avatar/3.jpg',
  },
  {
    id: 5,
    name: "Doctor's Appointment",
    status: 'My appointment for the doctor was rescheduled for next Saturday.',
    avatar: '/static/images/avatar/4.jpg',
  },
  {
    id: 6,
    name: 'Discussion',
    status: `Menus that are generated by the bottom app bar (such as a bottom
      navigation drawer or overflow menu) open as bottom sheets at a higher elevation
      than the bar.`,
    avatar: '/static/images/avatar/5.jpg',
  },
  {
    id: 7,
    name: 'Summer BBQ',
    status: `Who wants to have a cookout this weekend? I just got some furniture
      for my backyard and would love to fire up the grill.`,
    avatar: '/static/images/avatar/1.jpg',
  },
];

function App() {
  const socket = io('http://localhost:5000'); 
  
  // recivied radom user
  const randomIndex = Math.floor(Math.random() * users.length);

  socket.on('connect', () => {
    // Emitir um evento para o servidor Socket.IO quando o usu√°rio se conecta
    socket.emit('setUserData', users[randomIndex]);
  });

  return (
    <div className="App">
      {/* <header className="App-header">
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
        </p>
        <Message socket={socket} />
        <div>
          <Input socket={socket} />
        </div>
      </header> */}
      <Dashboard socket={socket} />
    </div>
  );
}

export default App;
